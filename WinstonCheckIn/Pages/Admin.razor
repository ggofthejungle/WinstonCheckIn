@using WinstonCheckIn.Services
@using MudBlazor
@using System.ComponentModel
@page "/admin"
@inject HttpClient Http
@inject AuthenticationStateService AuthStateService
@inject NavigationManager Navigation
@inject CheckInService CheckInService
@implements IDisposable

<PageTitle>Admin</PageTitle>

<h1>Admin Dashboard</h1>

<p>Welcome to the admin panel. You have successfully logged in!</p>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Check-In Records</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudTable Items="@CheckInService.CheckInRecords" Hover="true" Striped="true" Dense="true">
                <HeaderContent>
                    <MudTh>First Name</MudTh>
                    <MudTh>Last Name</MudTh>
                    <MudTh>Phone</MudTh>
                    <MudTh>Paid</MudTh>
                    <MudTh>Actions</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="First Name">@context.FirstName</MudTd>
                    <MudTd DataLabel="Last Name">@context.LastName</MudTd>
                    <MudTd DataLabel="Phone">@context.Phone</MudTd>
                    <MudTd DataLabel="Paid">
                        <MudChip T="string" Color="@(context.IsPaid ? Color.Success : Color.Error)" 
                                Size="Size.Small" 
                                Variant="Variant.Filled">
                            @(context.IsPaid ? "Yes" : "No")
                        </MudChip>
                    </MudTd>
                    <MudTd DataLabel="Actions">
                        <MudButton Variant="Variant.Text" 
                                  Color="Color.Primary" 
                                  Size="Size.Small"
                                  StartIcon="Icons.Material.Filled.Edit"
                                  @onclick="@(() => TogglePaymentStatus(CheckInService.CheckInRecords.ToList().IndexOf(context)))">
                            Toggle Payment
                        </MudButton>
                        <MudButton Variant="Variant.Text" 
                                  Color="Color.Error" 
                                  Size="Size.Small"
                                  StartIcon="Icons.Material.Filled.Delete"
                                  @onclick="@(() => DeleteRecord(CheckInService.CheckInRecords.ToList().IndexOf(context)))">
                            Delete
                        </MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    protected override void OnInitialized()
    {
        CheckInService.PropertyChanged += OnCheckInServiceChanged;
    }

    private void OnCheckInServiceChanged(object? sender, PropertyChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    private void TogglePaymentStatus(int index)
    {
        var record = CheckInService.CheckInRecords[index];
        CheckInService.UpdatePaymentStatus(index, !record.IsPaid);
    }

    private void DeleteRecord(int index)
    {
        CheckInService.RemoveCheckIn(index);
    }

    public void Dispose()
    {
        CheckInService.PropertyChanged -= OnCheckInServiceChanged;
    }
}

@using WinstonCheckIn.Services
@using System.ComponentModel
@using MudBlazor
@page "/"
@inject CheckInService CheckInService
@inject ISnackbar Snackbar
@implements IDisposable

<PageTitle>Home</PageTitle>

<style>
    .form-container {
        background-color: #ffffff; 
        padding: 40px;
        border-radius: 5px; 
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1); 
        width: 350px; 
        max-width: 90%; 
        text-align: center;
        margin: 20px auto;
    }

    .company-header {
        margin-bottom: 30px;
    }

    .logo {
        width: 150px; 
        height: auto;
        margin-bottom: 5px;
    }

    .tagline {
        font-size: 0.8em;
        color: #666;
        margin-top: 0;
    }

    .input-group {
        margin-bottom: 20px; 
    }

    input[type="text"],
    input[type="tel"] {
        width: calc(100% - 20px); 
        padding: 15px 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f0f0f0; 
        color: #666; 
        font-size: 1.1em;
        text-align: center;
        box-sizing: border-box; 
        font-weight: bold; 
    }

    input[type="text"]::placeholder,
    input[type="tel"]::placeholder {
        font-weight: bold;
        color: #888; 
    }

    input[type="text"]:focus,
    input[type="tel"]:focus {
        border-color: #007bff; 
        outline: none;
    }

    .enter-button {
        background-color: #007bff; 
        color: white;
        padding: 15px 30px;
        border: none;
        border-radius: 5px;
        font-size: 1.2em;
        cursor: pointer;
        margin-top: 20px;
        width: 60%; 
        font-weight: bold;
    }

    .enter-button:hover {
        background-color: #0056b3;
    }

    .admin-section {
        margin-top: 30px;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 5px;
        border: 1px solid #dee2e6;
    }

    .count-indicator {
        font-size: 14px;
        color: #666;
        margin-top: 5px;
        font-weight: 500;
    }
</style>

<div class="form-container">
    <div class="company-header">
        <img src="images/winstonLogo.png" alt="Winston Logo" class="logo">
        <p class="tagline">Winston Check-In</p>
        <p class="count-indicator">@CheckInService.CheckInRecords.Count / 28 spots filled</p>
    </div>

    @if (CheckInService.CheckInRecords.Count < 28)
    {
        <form @onsubmit="HandleCheckIn">
            <div class="input-group">
                <input type="text" @bind="firstName" placeholder="NAME" />
            </div>

            <div class="input-group">
                <input type="text" @bind="lastName" placeholder="LAST NAME" />
            </div>

            <div class="input-group">
                <input type="tel" @bind="phoneNumber" placeholder="PHONE #" />
            </div>

            <button type="submit" class="enter-button">ENTER</button>
        </form>

        @if (checkInMessage != null)
        {
            <p style="color: green; margin-top: 15px;">@checkInMessage</p>
        }
    }
    else
    {
        <div class="mt-4">
            <MudAlert Severity="Severity.Warning" Class="mb-4">
                <MudText Typo="Typo.h6" Class="mb-2">Sorry, 28 people have already checked in!</MudText>
                <MudText>All available spots have been filled. Thank you for your interest!</MudText>
            </MudAlert>
        </div>
    }
</div>

@if (CheckInService.CheckInRecords.Any())
{
    <div class="mt-4">
        @foreach (var record in CheckInService.CheckInRecords)
        {
            <div class="d-flex align-items-center py-1 px-0" style="border-bottom: 1px solid #e0e0e0;">
                <div class="flex-grow-1 d-flex align-items-center justify-content-between">
                    <div class="d-flex align-items-center">
                        <span style="font-size: 14px;">
                            <strong>@record.FirstName @record.LastName</strong> - @record.Phone
                        </span>
                    </div>
                    <div class="d-flex align-items-center">
                        <MudChip T="string" Color="@(record.IsPaid ? Color.Success : Color.Error)" 
                                Size="Size.Small" 
                                Variant="Variant.Filled">
                            @(record.IsPaid ? "Paid" : "Unpaid")
                        </MudChip>
                    </div>
                </div>
            </div>
        }
    </div>
}


@code {
    // Check-in form fields
    private string firstName = string.Empty;
    private string lastName = string.Empty;
    private string phoneNumber = string.Empty;
    private string? checkInMessage;

    protected override void OnInitialized()
    {
        CheckInService.PropertyChanged += OnCheckInServiceChanged;
    }

    private void OnCheckInServiceChanged(object? sender, PropertyChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    private void HandleCheckIn()
    {
        // Check if we've reached the 28 person limit
        if (CheckInService.CheckInRecords.Count >= 28)
        {
            checkInMessage = "Sorry, 28 people have already checked in!";
            return;
        }

        if (string.IsNullOrWhiteSpace(firstName) || string.IsNullOrWhiteSpace(lastName) || string.IsNullOrWhiteSpace(phoneNumber))
        {
            checkInMessage = "Please fill in all fields.";
            return;
        }

        // Check if this will be the 28th person (before adding)
        bool isLastPerson = CheckInService.CheckInRecords.Count == 27;

        // Add the check-in record to the service
        CheckInService.AddCheckIn(firstName, lastName, phoneNumber);
        
        if (isLastPerson)
        {
            // Special message for the 28th person
            checkInMessage = "Sorry, 28 people have already checked in!";
            Snackbar.Add($"🎉 Congratulations {firstName} {lastName}! You are the last one checked in, lucky you! 🍀", Severity.Success, config =>
            {
                config.VisibleStateDuration = 5000; // Show for 5 seconds
                config.HideTransitionDuration = 500;
                config.ShowTransitionDuration = 500;
                config.SnackbarVariant = Variant.Filled;
            });
        }
        else
        {
            checkInMessage = $"Welcome, {firstName} {lastName}! Check-in successful.";
        }
        
        // Clear the form
        firstName = string.Empty;
        lastName = string.Empty;
        phoneNumber = string.Empty;
    }

    public void Dispose()
    {
        CheckInService.PropertyChanged -= OnCheckInServiceChanged;
    }
}